services:
# api
  api:
    container_name: greenlight_api
    build:
      context: .
      dockerfile: Dockerfile
    env_file: .env
    ports:
      - "8000:8000"
    volumes:
      - ./:/greenlight
    depends_on:
      db:
        condition: service_healthy

# ui
  ui:
    container_name: greenlight_ui
    build:
      context: ./ui
    ports:
      - "5173:5173"
    volumes:
      - ./ui:/app
    depends_on:
      - api

# database
  db:
    env_file: .env
    image: "postgres:15"
    hostname: "db"
    ports:
      - "5432:5432"
    volumes:
      - ./docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d/
      - pgdata:/var/lib/postgresql/data

    healthcheck:
      test: ["CMD","pg_isready","-U","greenlight","-d","greenlight"]
      interval: 10s
      retries: 3
      start_period: 30s
      timeout: 10s

  migrate:
    image: migrate/migrate
    container_name: greenlight_migrate
    depends_on:
      - db
    volumes:
      - ./migrations:/migrations
    env_file: .env
    entrypoint: ["migrate", "-path", "/migrations", "-database", "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}?sslmode=disable"]

  # Adminer
  adminer:
    container_name: admner
    image: dockette/adminer
    restart: always
    ports:
      - "8080:80"
    depends_on:
      - db

# volumes
volumes:
  pgdata:
    driver: local
